{% render 'partials/head.liquid' %}

<main id="main-content" tabindex="-1">
    <h1 class="main-title">{{ title }}</h1>

    {% comment %} Search, filter, form {% endcomment %}
    <section class="dashboard-header">

        <div class="search-filter-group">
            <input type="text" id="search-input" class="search-input" placeholder="Search experiments..." />
            <button class="search-button">Search</button>
        </div>

        <select class="filter-button" name="filter" id="filter">
            <option value="" disabled selected>Filter experiments</option>
            <option value="option1">option 1</option>
            <option value="option2">option 2</option>
            <option value="option3">option 3</option>
            <option value="option4">option 4</option>
        </select>

        <button class="add-button" id="openDialogBtn" title="Create a new experiment"
            aria-label="Create a new experiment" aria-haspopup="dialog" aria-controls="experimentDialog">
            <span class="add-text">Create a new experiment...</span>
            <span class="add-icon" aria-hidden="true">+</span>
        </button>
    </section>

    <p class="experiment-count" aria-live="polite">
        {{ experiments | size }} experiments found
    </p>

    {% comment %} Dialog with JS enabled {% endcomment %}
    <section class="no-js">
        <dialog id="experimentDialog" class="fallback-dialog" role="dialog" data-enhanced="create-experiment-form"
            aria-labelledby="dialog-title">
            <form method="POST" action="/create-experiment" data-enhanced="create-experiment-form">
                <h2 class="form-title" id="dialog-title">New experiment</h2>

                <label for="name">Subject</label><br>
                <input type="text" id="name" name="name" required><br><br>

                <label for="description">Description</label><br>
                <textarea id="description" name="description" required></textarea><br><br>

                <label for="data">Data (optional)</label><br>
                <textarea id="data" name="data"></textarea><br><br>

                <button type="submit" class="create-button">Create experiment</button>
                <button type="button" id="closeDialogBtn">Close</button>
            </form>
        </dialog>

        {% comment %} Dialog with NO JS enabled {% endcomment %}
        <noscript>
            <dialog open class="fallback-dialog" role="dialog" data-enhanced="create-experiment-form"
                aria-labelledby="dialog-title-noscript">
                <form method="POST" action="/create-experiment" data-enhanced="create-experiment-form">
                    <h2 class="form-title" id="dialog-title-noscript">New experiment</h2>

                    <label for="name">Subject</label><br>
                    <input type="text" id="name" name="name" required><br><br>

                    <label for="description">Description</label><br>
                    <textarea id="description" name="description" required></textarea><br><br>

                    <label for="data">Data (optional)</label><br>
                    <textarea id="data" name="data"></textarea><br><br>

                    <button type="submit" class="create-button">Create experiment</button>
                </form>
            </dialog>
        </noscript>
    </section>

    {% comment %} Experiments {% endcomment %}
    <section class="experiments-grid">
        {% for experiment in experiments %}
        <article class="experiment-tile">
            <a href="/{{ experiment.id }}">
                <h2 class="experiment-title">{{ experiment.name }}</h2>
            </a>
            <div class="experiment-meta">
                <span class="status-badge {{ experiment.status | downcase }}">
                    {{ experiment.status }}
                </span>
                <time class="experiment-date" datetime="{{ experiment.createdAt | date: " %Y-%m-%d" }}">
                    {{ experiment.createdAt | date: "%b %d, %Y" }}
                </time>
            </div>
            <p class="experiment-description">{{ experiment.description }}</p>
        </article>
        {% endfor %}
    </section>
</main>

{% comment %} POST form script with loading & succes state {% endcomment %}
<script type="module">
    // We maken hieronder aannames over wat de browser ondersteunt
    // Dus laten we deze eerst testen met Feature Detection
    // https://developer.mozilla.org/en-US/docs/Learn_web_development/Extensions/Testing/Feature_detection
    if ('fetch' in window && 'DOMParser' in window) {

        // Als er ergens op de pagina een formulier wordt gesubmit..
        // (We maken hier gebruik van Event Delegation)
        document.addEventListener('submit', async function (event) {

            // Hou in een variabele bij welk formulier dat was
            const form = event.target;

            if (!form.hasAttribute('data-enhanced')) return;

            // Voorkom de standaard submit van de browser
            // Let op: hiermee overschrijven we de default Loading state van de browser...
            event.preventDefault();

            const submitButton = form.querySelector('button[type="submit"]');
            const originalButtonText = submitButton.innerHTML;

            // Zet de button tijdelijk uit als hij aan het laden is en de post actief is
            submitButton.disabled = true;
            submitButton.innerHTML = 'Creating...';

            // Verzamel form data samen met de geactiveerde button naam en waardes
            const formData = new FormData(form);
            if (event.submitter) {
                formData.append(event.submitter.name, event.submitter.value);
            }

            // Verander form data naar een object
            const formObject = Object.fromEntries(formData.entries());

            // Stuur form data als JSON naar de server 
            const response = await fetch(form.action, {
                method: form.method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formObject)
            });

            // Toon succes state en activeer confetti
            submitButton.innerHTML = 'âœ“ Experiment reated!';
            partyPopper();

            // Herlaad na korte tijd de pagina
            setTimeout(() => {
                window.location.reload();
            }, 4000);
        })
    };

</script>



{% render 'partials/foot.liquid' %}