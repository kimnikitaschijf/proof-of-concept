{% render 'partials/head.liquid' %}

<a href="#main-content" class="skip-link">Skip to main content</a>

<main id="main-content" tabindex="-1">
    <h1 class="main-title">{{ title }}</h1>

    <section class="dashboard-header">

        <div class="search-filter-group">
            <input type="text" id="search-input" class="search-input" placeholder="Search experiments..." />
            <button class="search-button">Search</button>
        </div>

        <button class="filter-button">Filter experiments ▼</button>

        <button class="add-button" id="openDialogBtn" title="Create a new experiment"
            aria-label="Create a new experiment" aria-haspopup="dialog" aria-controls="experimentDialog">
            <span class="add-text">Create a new experiment...</span>
            <span class="add-icon" aria-hidden="true">+</span>
        </button>
    </section>

    <p class="experiment-count" aria-live="polite">
        {{ experiments | size }} experiments found
    </p>
    <section class="no-js">
        <dialog id="experimentDialog" class="fallback-dialog" role="dialog" data-enhanced="create-experiment-form"
            aria-labelledby="dialog-title">
            <form method="POST" action="/create-experiment" data-enhanced="create-experiment-form">
                <h2 class="form-title" id="dialog-title">New experiment</h2>

                <label for="name">Subject</label><br>
                <input type="text" id="name" name="name" required><br><br>

                <label for="description">Description</label><br>
                <textarea id="description" name="description" required></textarea><br><br>

                <label for="data">Data (optional)</label><br>
                <textarea id="data" name="data"></textarea><br><br>

                <button type="submit" class="create-button">Create experiment</button>
                <button type="button" id="closeDialogBtn">Close</button>
            </form>
        </dialog>

        <noscript>
            <dialog open class="fallback-dialog" role="dialog" data-enhanced="create-experiment-form"
                aria-labelledby="dialog-title-noscript">
                <form method="POST" action="/create-experiment" data-enhanced="create-experiment-form">
                    <h2 class="form-title" id="dialog-title-noscript">New experiment</h2>

                    <label for="name">Subject</label><br>
                    <input type="text" id="name" name="name" required><br><br>

                    <label for="description">Description</label><br>
                    <textarea id="description" name="description" required></textarea><br><br>

                    <label for="data">Data (optional)</label><br>
                    <textarea id="data" name="data"></textarea><br><br>

                    <button type="submit" class="create-button">Create experiment</button>
                </form>
            </dialog>
        </noscript>
    </section>

    <section class="experiments-grid">
        {% for experiment in experiments %}
        <article class="experiment-tile">
            <a href="/{{ experiment.id }}">
                <h2 class="experiment-title">{{ experiment.name }}</h2>
            </a>
            <div class="experiment-meta">
                <span class="status-badge {{ experiment.status | downcase }}">
                    {{ experiment.status }}
                </span>
                <time class="experiment-date" datetime="{{ experiment.createdAt | date: " %Y-%m-%d" }}">
                    {{ experiment.createdAt | date: "%b %d, %Y" }}
                </time>
            </div>
            <p class="experiment-description">{{ experiment.description }}</p>
        </article>
        {% endfor %}
    </section>
</main>

<script type="module">
    {% comment %} Listen for form submissions {% endcomment %}
    document.addEventListener('submit', async function (event) {
        const form = event.target;

        {% comment %} Only handle forms with data - enhanced attribute {% endcomment %}
        if (!form.hasAttribute('data-enhanced')) return;

        {% comment %} Prevent the default form submit behavior {% endcomment %}
        event.preventDefault();

        const submitButton = form.querySelector('button[type="submit"]');
        const originalButtonText = submitButton.innerHTML;

        {% comment %} Disable button and show feedback {% endcomment %}
        submitButton.disabled = true;
        submitButton.innerHTML = 'Creating...';

        {% comment %} Collect form data, including clicked button's name and value {% endcomment %}
        const formData = new FormData(form);
        if (event.submitter) {
            formData.append(event.submitter.name, event.submitter.value);
        }

        {% comment %} Convert form data to a plain object {% endcomment %}
        const formObject = Object.fromEntries(formData.entries());

        try {
            {% comment %} Send form data as JSON to the server {% endcomment %}
            const response = await fetch(form.action, {
                method: form.method,
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formObject)
            });

            {% comment %} If response not ok, throw an error {% endcomment %}
            if (!response.ok) {
                const errorText = await response.text();
                console.error('Fetch error:', errorText);
                throw new Error('Server error');
            }

            {% comment %} Show success and reload page {% endcomment %}
            submitButton.innerHTML = '✓ Created!';
            setTimeout(() => {
                window.location.reload();
            }, 2500);
    });
</script>


{% render 'partials/foot.liquid' %}